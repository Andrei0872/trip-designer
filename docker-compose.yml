version: '3.9'

services:

  db:
    image: postgres:13.6
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_DB: "${POSTGRES_DB}"
    restart: on-failure
    healthcheck:
      test: "psql -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c 'select 1;'"
      interval: 1s
      retries: 20
    volumes:
      - database_trip_designer_dev:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d/
    networks:
      - trip_designer_dev
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: foo@bar.com
      PGADMIN_DEFAULT_PASSWORD: "${POSTGRES_PASSWORD}"
    ports:
      - "80:80"
    volumes:
      - database_trip_designer_pgadmin:/var/lib/pgadmin
    networks:
      - trip_designer_dev

  server:
    build:
      context: ./server/
      dockerfile: .docker/Dockerfile.dev
    environment:
      NODE_ENV: development
      DB_HOST: db
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_DB: "${POSTGRES_DB}"
    volumes:
      - ./server:/app
      # Don't want to use the `node_modules` from the working tree,
      # but the one which has been created in the container, due to
      # `npm i`.
      - /app/node_modules
    command: npm run dev
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - trip_designer_dev

volumes:
  database_trip_designer_dev:
  database_trip_designer_pgadmin:

networks:
  trip_designer_dev: